{"version":3,"file":"main.js","mappings":";;;;;;;;;;AAAA,yFAA4B;;;;;;;;;;;ACA5B,SAAgB,KAAK;IACnB,OAAO,cAAc,CAAC;AACxB,CAAC;AAFD,sBAEC;;;;;;;;ACFD;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA,8DAA8D;AAC9D,6DAAiD;AAGjD,6CAAmC;AAEnC,IAAM,GAAG,GAAG,OAAO,EAAE,CAAC;AAEtB,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,UAAC,GAAG,EAAE,GAAG;IACvB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;IAE3B,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,mCAAmC,EAAE,CAAC,CAAC;AAC7D,CAAC,CAAC,CAAC;AAEH,IAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;AACtC,IAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE;IAC9B,OAAO,CAAC,GAAG,CAAC,mCAAiC,IAAI,SAAM,CAAC,CAAC;AAC3D,CAAC,CAAC,CAAC;AACH,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC","sources":["webpack://wolox-express-demo/./libs/utils/src/index.ts","webpack://wolox-express-demo/./libs/utils/src/lib/utils.ts","webpack://wolox-express-demo/external commonjs \"express\"","webpack://wolox-express-demo/external commonjs \"tslib\"","webpack://wolox-express-demo/webpack/bootstrap","webpack://wolox-express-demo/./apps/wolox-express-demo-nx/src/main.ts"],"sourcesContent":["export * from './lib/utils';\n","export function utils() {\n  return 'import utils';\n}\n","module.exports = require(\"express\");","module.exports = require(\"tslib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\nimport * as utils from '../../../libs/utils/src';\n\n\nimport * as express from 'express';\n\nconst app = express();\n\napp.get('/api', (req, res) => {\n  console.log(utils.utils());\n\n  res.send({ message: 'Welcome to wolox-express-demo-nx!' });\n});\n\nconst port = process.env.port || 3333;\nconst server = app.listen(port, () => {\n  console.log(`Listening at http://localhost:${port}/api`);\n});\nserver.on('error', console.error);\n"],"names":[],"sourceRoot":""}